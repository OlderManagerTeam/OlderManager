<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sds.em.mapper.QueueMapper" >
  <resultMap id="BaseResultMap" type="com.sds.em.po.Queue" >
    <id column="queueId" property="queueid" jdbcType="INTEGER" />
    <result column="queueAssistantId" property="queueassistantid" jdbcType="INTEGER" />
    <result column="queueOlderId" property="queueolderid" jdbcType="INTEGER" />
    <result column="queueDate" property="queuedate" jdbcType="DATE" />
    <result column="queueType" property="queuetype" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    queueId, queueAssistantId, queueOlderId, queueDate, queueType
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sds.em.po.QueueExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from queue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from queue
    where queueId = #{queueid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from queue
    where queueId = #{queueid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.QueueExample" >
    delete from queue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Queue" >
    insert into queue (queueId, queueAssistantId, queueOlderId, 
      queueDate, queueType)
    values (#{queueid,jdbcType=INTEGER}, #{queueassistantid,jdbcType=INTEGER}, #{queueolderid,jdbcType=INTEGER}, 
      #{queuedate,jdbcType=DATE}, #{queuetype,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Queue" >
    insert into queue
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="queueid != null" >
        queueId,
      </if>
      <if test="queueassistantid != null" >
        queueAssistantId,
      </if>
      <if test="queueolderid != null" >
        queueOlderId,
      </if>
      <if test="queuedate != null" >
        queueDate,
      </if>
      <if test="queuetype != null" >
        queueType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="queueid != null" >
        #{queueid,jdbcType=INTEGER},
      </if>
      <if test="queueassistantid != null" >
        #{queueassistantid,jdbcType=INTEGER},
      </if>
      <if test="queueolderid != null" >
        #{queueolderid,jdbcType=INTEGER},
      </if>
      <if test="queuedate != null" >
        #{queuedate,jdbcType=DATE},
      </if>
      <if test="queuetype != null" >
        #{queuetype,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.QueueExample" resultType="java.lang.Integer" >
    select count(*) from queue
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update queue
    <set >
      <if test="record.queueid != null" >
        queueId = #{record.queueid,jdbcType=INTEGER},
      </if>
      <if test="record.queueassistantid != null" >
        queueAssistantId = #{record.queueassistantid,jdbcType=INTEGER},
      </if>
      <if test="record.queueolderid != null" >
        queueOlderId = #{record.queueolderid,jdbcType=INTEGER},
      </if>
      <if test="record.queuedate != null" >
        queueDate = #{record.queuedate,jdbcType=DATE},
      </if>
      <if test="record.queuetype != null" >
        queueType = #{record.queuetype,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update queue
    set queueId = #{record.queueid,jdbcType=INTEGER},
      queueAssistantId = #{record.queueassistantid,jdbcType=INTEGER},
      queueOlderId = #{record.queueolderid,jdbcType=INTEGER},
      queueDate = #{record.queuedate,jdbcType=DATE},
      queueType = #{record.queuetype,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Queue" >
    update queue
    <set >
      <if test="queueassistantid != null" >
        queueAssistantId = #{queueassistantid,jdbcType=INTEGER},
      </if>
      <if test="queueolderid != null" >
        queueOlderId = #{queueolderid,jdbcType=INTEGER},
      </if>
      <if test="queuedate != null" >
        queueDate = #{queuedate,jdbcType=DATE},
      </if>
      <if test="queuetype != null" >
        queueType = #{queuetype,jdbcType=VARCHAR},
      </if>
    </set>
    where queueId = #{queueid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Queue" >
    update queue
    set queueAssistantId = #{queueassistantid,jdbcType=INTEGER},
      queueOlderId = #{queueolderid,jdbcType=INTEGER},
      queueDate = #{queuedate,jdbcType=DATE},
      queueType = #{queuetype,jdbcType=VARCHAR}
    where queueId = #{queueid,jdbcType=INTEGER}
  </update>
</mapper>