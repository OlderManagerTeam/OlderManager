<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sds.em.mapper.OrderlistMapper">
	<resultMap id="BaseResultMap" type="com.sds.em.po.Orderlist">
		<id column="orderListId" property="orderlistid" jdbcType="INTEGER" />
		<result column="orderListFId" property="orderlistfid" jdbcType="INTEGER" />
		<result column="orderProductId" property="orderproductid"
			jdbcType="INTEGER" />
		<result column="orderProductCount" property="orderproductcount"
			jdbcType="INTEGER" />
		<result column="orderDiscountPrice" property="orderdiscountprice"
			jdbcType="REAL" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		orderListId, orderListFId, orderProductId,
		orderProductCount, orderDiscountPrice
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.sds.em.po.OrderlistExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from orderlist
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from orderlist
		where orderListId = #{orderlistid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		orderlist
		where orderListId = #{orderlistid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.sds.em.po.OrderlistExample">
		delete from orderlist
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sds.em.po.Orderlist">
		insert into orderlist
		(orderListId, orderListFId, orderProductId,
		orderProductCount,
		orderDiscountPrice)
		values (#{orderlistid,jdbcType=INTEGER},
		#{orderlistfid,jdbcType=INTEGER},
		#{orderproductid,jdbcType=INTEGER},
		#{orderproductcount,jdbcType=INTEGER},
		#{orderdiscountprice,jdbcType=REAL})
	</insert>
	<insert id="insertSelective" parameterType="com.sds.em.po.Orderlist">
		insert into orderlist
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderlistid != null">
				orderListId,
			</if>
			<if test="orderlistfid != null">
				orderListFId,
			</if>
			<if test="orderproductid != null">
				orderProductId,
			</if>
			<if test="orderproductcount != null">
				orderProductCount,
			</if>
			<if test="orderdiscountprice != null">
				orderDiscountPrice,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderlistid != null">
				#{orderlistid,jdbcType=INTEGER},
			</if>
			<if test="orderlistfid != null">
				#{orderlistfid,jdbcType=INTEGER},
			</if>
			<if test="orderproductid != null">
				#{orderproductid,jdbcType=INTEGER},
			</if>
			<if test="orderproductcount != null">
				#{orderproductcount,jdbcType=INTEGER},
			</if>
			<if test="orderdiscountprice != null">
				#{orderdiscountprice,jdbcType=REAL},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sds.em.po.OrderlistExample"
		resultType="java.lang.Integer">
		select count(*) from orderlist
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update orderlist
		<set>
			<if test="record.orderlistid != null">
				orderListId = #{record.orderlistid,jdbcType=INTEGER},
			</if>
			<if test="record.orderlistfid != null">
				orderListFId = #{record.orderlistfid,jdbcType=INTEGER},
			</if>
			<if test="record.orderproductid != null">
				orderProductId =
				#{record.orderproductid,jdbcType=INTEGER},
			</if>
			<if test="record.orderproductcount != null">
				orderProductCount =
				#{record.orderproductcount,jdbcType=INTEGER},
			</if>
			<if test="record.orderdiscountprice != null">
				orderDiscountPrice =
				#{record.orderdiscountprice,jdbcType=REAL},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update orderlist
		set orderListId =
		#{record.orderlistid,jdbcType=INTEGER},
		orderListFId =
		#{record.orderlistfid,jdbcType=INTEGER},
		orderProductId =
		#{record.orderproductid,jdbcType=INTEGER},
		orderProductCount =
		#{record.orderproductcount,jdbcType=INTEGER},
		orderDiscountPrice =
		#{record.orderdiscountprice,jdbcType=REAL}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Orderlist">
		update orderlist
		<set>
			<if test="orderlistfid != null">
				orderListFId = #{orderlistfid,jdbcType=INTEGER},
			</if>
			<if test="orderproductid != null">
				orderProductId = #{orderproductid,jdbcType=INTEGER},
			</if>
			<if test="orderproductcount != null">
				orderProductCount =
				#{orderproductcount,jdbcType=INTEGER},
			</if>
			<if test="orderdiscountprice != null">
				orderDiscountPrice = #{orderdiscountprice,jdbcType=REAL},
			</if>
		</set>
		where orderListId = #{orderlistid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sds.em.po.Orderlist">
		update orderlist
		set orderListFId = #{orderlistfid,jdbcType=INTEGER},
		orderProductId =
		#{orderproductid,jdbcType=INTEGER},
		orderProductCount =
		#{orderproductcount,jdbcType=INTEGER},
		orderDiscountPrice =
		#{orderdiscountprice,jdbcType=REAL}
		where orderListId =
		#{orderlistid,jdbcType=INTEGER}
	</update>

	<!-- wuwenbo,获取订单详情 -->
	<select id="getorderlist" parameterType="int"
		resultType="com.sds.em.pojo.OrderlistExtend">

		SELECT * FROM orderlist as o INNER JOIN product as p on
		p.productId=o.orderProductId where o.orderListFId=#{value}

	</select>

	<!-- lu -->
	<select id="shopMyOrderInfo" parameterType="com.sds.em.shopfront.pojo.MyOrdersListExtend"
		resultType="com.sds.em.shop.pojo.MyOrderViewExtend">
		SELECT product.*,orders.*,orderlist.* from orders
		INNER JOIN
		olderbase
		ON
		orders.orderOlderId=olderbase.olderId
		INNER JOIN orderlist
		ON
		orders.orderId=orderlist.orderListFId
		INNER JOIN product
		ON
		orderlist.orderProductId=product.productId
		WHERE
		orders.orderOlderId=#{olderid} and orders.orderId=#{orderid}

	</select>

	<select id="shopBuyRecordInfo" parameterType="int"
		resultType="com.sds.em.shop.pojo.MyOrderViewExtend">
		SELECT product.*,orders.*,orderlist.* from orders
		INNER JOIN
		olderbase
		ON
		orders.orderOlderId=olderbase.olderId
		INNER JOIN orderlist
		ON
		orders.orderId=orderlist.orderListFId
		INNER JOIN product
		ON
		orderlist.orderProductId=product.productId
		WHERE
		orders.orderOlderId=#{value} AND orders.orderStatus='已签收'

	</select>
</mapper>