<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sds.em.mapper.OldersickMapper" >
  <resultMap id="BaseResultMap" type="com.sds.em.po.Oldersick" >
    <id column="sickId" property="sickid" jdbcType="INTEGER" />
    <result column="sickOlderId" property="sickolderid" jdbcType="INTEGER" />
    <result column="sickInfo" property="sickinfo" jdbcType="VARCHAR" />
    <result column="sickDoctor" property="sickdoctor" jdbcType="VARCHAR" />
    <result column="sickDate" property="sickdate" jdbcType="DATE" />
    <result column="sickAdvice" property="sickadvice" jdbcType="VARCHAR" />
    <result column="sickHospital" property="sickhospital" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    sickId, sickOlderId, sickInfo, sickDoctor, sickDate, sickAdvice, sickHospital
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sds.em.po.OldersickExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oldersick
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oldersick
    where sickId = #{sickid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oldersick
    where sickId = #{sickid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.OldersickExample" >
    delete from oldersick
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Oldersick" >
    insert into oldersick (sickId, sickOlderId, sickInfo, 
      sickDoctor, sickDate, sickAdvice, 
      sickHospital)
    values (#{sickid,jdbcType=INTEGER}, #{sickolderid,jdbcType=INTEGER}, #{sickinfo,jdbcType=VARCHAR}, 
      #{sickdoctor,jdbcType=VARCHAR}, #{sickdate,jdbcType=DATE}, #{sickadvice,jdbcType=VARCHAR}, 
      #{sickhospital,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Oldersick" >
    insert into oldersick
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sickid != null" >
        sickId,
      </if>
      <if test="sickolderid != null" >
        sickOlderId,
      </if>
      <if test="sickinfo != null" >
        sickInfo,
      </if>
      <if test="sickdoctor != null" >
        sickDoctor,
      </if>
      <if test="sickdate != null" >
        sickDate,
      </if>
      <if test="sickadvice != null" >
        sickAdvice,
      </if>
      <if test="sickhospital != null" >
        sickHospital,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sickid != null" >
        #{sickid,jdbcType=INTEGER},
      </if>
      <if test="sickolderid != null" >
        #{sickolderid,jdbcType=INTEGER},
      </if>
      <if test="sickinfo != null" >
        #{sickinfo,jdbcType=VARCHAR},
      </if>
      <if test="sickdoctor != null" >
        #{sickdoctor,jdbcType=VARCHAR},
      </if>
      <if test="sickdate != null" >
        #{sickdate,jdbcType=DATE},
      </if>
      <if test="sickadvice != null" >
        #{sickadvice,jdbcType=VARCHAR},
      </if>
      <if test="sickhospital != null" >
        #{sickhospital,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.OldersickExample" resultType="java.lang.Integer" >
    select count(*) from oldersick
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oldersick
    <set >
      <if test="record.sickid != null" >
        sickId = #{record.sickid,jdbcType=INTEGER},
      </if>
      <if test="record.sickolderid != null" >
        sickOlderId = #{record.sickolderid,jdbcType=INTEGER},
      </if>
      <if test="record.sickinfo != null" >
        sickInfo = #{record.sickinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.sickdoctor != null" >
        sickDoctor = #{record.sickdoctor,jdbcType=VARCHAR},
      </if>
      <if test="record.sickdate != null" >
        sickDate = #{record.sickdate,jdbcType=DATE},
      </if>
      <if test="record.sickadvice != null" >
        sickAdvice = #{record.sickadvice,jdbcType=VARCHAR},
      </if>
      <if test="record.sickhospital != null" >
        sickHospital = #{record.sickhospital,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oldersick
    set sickId = #{record.sickid,jdbcType=INTEGER},
      sickOlderId = #{record.sickolderid,jdbcType=INTEGER},
      sickInfo = #{record.sickinfo,jdbcType=VARCHAR},
      sickDoctor = #{record.sickdoctor,jdbcType=VARCHAR},
      sickDate = #{record.sickdate,jdbcType=DATE},
      sickAdvice = #{record.sickadvice,jdbcType=VARCHAR},
      sickHospital = #{record.sickhospital,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Oldersick" >
    update oldersick
    <set >
      <if test="sickolderid != null" >
        sickOlderId = #{sickolderid,jdbcType=INTEGER},
      </if>
      <if test="sickinfo != null" >
        sickInfo = #{sickinfo,jdbcType=VARCHAR},
      </if>
      <if test="sickdoctor != null" >
        sickDoctor = #{sickdoctor,jdbcType=VARCHAR},
      </if>
      <if test="sickdate != null" >
        sickDate = #{sickdate,jdbcType=DATE},
      </if>
      <if test="sickadvice != null" >
        sickAdvice = #{sickadvice,jdbcType=VARCHAR},
      </if>
      <if test="sickhospital != null" >
        sickHospital = #{sickhospital,jdbcType=VARCHAR},
      </if>
    </set>
    where sickId = #{sickid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Oldersick" >
    update oldersick
    set sickOlderId = #{sickolderid,jdbcType=INTEGER},
      sickInfo = #{sickinfo,jdbcType=VARCHAR},
      sickDoctor = #{sickdoctor,jdbcType=VARCHAR},
      sickDate = #{sickdate,jdbcType=DATE},
      sickAdvice = #{sickadvice,jdbcType=VARCHAR},
      sickHospital = #{sickhospital,jdbcType=VARCHAR}
    where sickId = #{sickid,jdbcType=INTEGER}
  </update>

<!-- lu 2017-10-12 id -->
	<insert id="insertOlderSick" parameterType="com.sds.em.po.Oldersick">
		<selectKey keyProperty="sickid" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into oldersick (sickOlderId, sickInfo,
		sickDoctor, sickDate, sickAdvice
		)
		values (#{sickolderid,jdbcType=INTEGER}, #{sickinfo,jdbcType=VARCHAR},
		#{sickdoctor,jdbcType=VARCHAR}, #{sickdate,jdbcType=DATE},
		#{sickadvice,jdbcType=VARCHAR}
		)
	</insert>
</mapper>