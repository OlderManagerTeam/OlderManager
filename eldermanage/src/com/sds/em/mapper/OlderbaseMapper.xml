<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sds.em.mapper.OlderbaseMapper" >
  <resultMap id="BaseResultMap" type="com.sds.em.po.Olderbase" >
    <id column="olderId" property="olderid" jdbcType="INTEGER" />
    <result column="olderName" property="oldername" jdbcType="VARCHAR" />
    <result column="olderSex" property="oldersex" jdbcType="VARCHAR" />
    <result column="olderBirthday" property="olderbirthday" jdbcType="DATE" />
    <result column="olderPassword" property="olderpassword" jdbcType="VARCHAR" />
    <result column="olderTel" property="oldertel" jdbcType="VARCHAR" />
    <result column="olderAddress" property="olderaddress" jdbcType="VARCHAR" />
    <result column="olderSingleStatus" property="oldersinglestatus" jdbcType="VARCHAR" />
    <result column="olderIDE" property="olderide" jdbcType="VARCHAR" />
    <result column="olderNation" property="oldernation" jdbcType="VARCHAR" />
    <result column="olderHeadUrl" property="olderheadurl" jdbcType="VARCHAR" />
    <result column="olderPoint" property="olderpoint" jdbcType="INTEGER" />
    <result column="olderBranchId" property="olderbranchid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    olderId, olderName, olderSex, olderBirthday, olderPassword, olderTel, olderAddress, 
    olderSingleStatus, olderIDE, olderNation, olderHeadUrl, olderPoint, olderBranchId
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sds.em.po.OlderbaseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from olderbase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from olderbase
    where olderId = #{olderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from olderbase
    where olderId = #{olderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.OlderbaseExample" >
    delete from olderbase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Olderbase" >
    insert into olderbase (olderId, olderName, olderSex, 
      olderBirthday, olderPassword, olderTel, 
      olderAddress, olderSingleStatus, olderIDE, 
      olderNation, olderHeadUrl, olderPoint, 
      olderBranchId)
    values (#{olderid,jdbcType=INTEGER}, #{oldername,jdbcType=VARCHAR}, #{oldersex,jdbcType=VARCHAR}, 
      #{olderbirthday,jdbcType=DATE}, #{olderpassword,jdbcType=VARCHAR}, #{oldertel,jdbcType=VARCHAR}, 
      #{olderaddress,jdbcType=VARCHAR}, #{oldersinglestatus,jdbcType=VARCHAR}, #{olderide,jdbcType=VARCHAR}, 
      #{oldernation,jdbcType=VARCHAR}, #{olderheadurl,jdbcType=VARCHAR}, #{olderpoint,jdbcType=INTEGER}, 
      #{olderbranchid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Olderbase" >
    insert into olderbase
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="olderid != null" >
        olderId,
      </if>
      <if test="oldername != null" >
        olderName,
      </if>
      <if test="oldersex != null" >
        olderSex,
      </if>
      <if test="olderbirthday != null" >
        olderBirthday,
      </if>
      <if test="olderpassword != null" >
        olderPassword,
      </if>
      <if test="oldertel != null" >
        olderTel,
      </if>
      <if test="olderaddress != null" >
        olderAddress,
      </if>
      <if test="oldersinglestatus != null" >
        olderSingleStatus,
      </if>
      <if test="olderide != null" >
        olderIDE,
      </if>
      <if test="oldernation != null" >
        olderNation,
      </if>
      <if test="olderheadurl != null" >
        olderHeadUrl,
      </if>
      <if test="olderpoint != null" >
        olderPoint,
      </if>
      <if test="olderbranchid != null" >
        olderBranchId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="olderid != null" >
        #{olderid,jdbcType=INTEGER},
      </if>
      <if test="oldername != null" >
        #{oldername,jdbcType=VARCHAR},
      </if>
      <if test="oldersex != null" >
        #{oldersex,jdbcType=VARCHAR},
      </if>
      <if test="olderbirthday != null" >
        #{olderbirthday,jdbcType=DATE},
      </if>
      <if test="olderpassword != null" >
        #{olderpassword,jdbcType=VARCHAR},
      </if>
      <if test="oldertel != null" >
        #{oldertel,jdbcType=VARCHAR},
      </if>
      <if test="olderaddress != null" >
        #{olderaddress,jdbcType=VARCHAR},
      </if>
      <if test="oldersinglestatus != null" >
        #{oldersinglestatus,jdbcType=VARCHAR},
      </if>
      <if test="olderide != null" >
        #{olderide,jdbcType=VARCHAR},
      </if>
      <if test="oldernation != null" >
        #{oldernation,jdbcType=VARCHAR},
      </if>
      <if test="olderheadurl != null" >
        #{olderheadurl,jdbcType=VARCHAR},
      </if>
      <if test="olderpoint != null" >
        #{olderpoint,jdbcType=INTEGER},
      </if>
      <if test="olderbranchid != null" >
        #{olderbranchid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.OlderbaseExample" resultType="java.lang.Integer" >
    select count(*) from olderbase
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update olderbase
    <set >
      <if test="record.olderid != null" >
        olderId = #{record.olderid,jdbcType=INTEGER},
      </if>
      <if test="record.oldername != null" >
        olderName = #{record.oldername,jdbcType=VARCHAR},
      </if>
      <if test="record.oldersex != null" >
        olderSex = #{record.oldersex,jdbcType=VARCHAR},
      </if>
      <if test="record.olderbirthday != null" >
        olderBirthday = #{record.olderbirthday,jdbcType=DATE},
      </if>
      <if test="record.olderpassword != null" >
        olderPassword = #{record.olderpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.oldertel != null" >
        olderTel = #{record.oldertel,jdbcType=VARCHAR},
      </if>
      <if test="record.olderaddress != null" >
        olderAddress = #{record.olderaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.oldersinglestatus != null" >
        olderSingleStatus = #{record.oldersinglestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.olderide != null" >
        olderIDE = #{record.olderide,jdbcType=VARCHAR},
      </if>
      <if test="record.oldernation != null" >
        olderNation = #{record.oldernation,jdbcType=VARCHAR},
      </if>
      <if test="record.olderheadurl != null" >
        olderHeadUrl = #{record.olderheadurl,jdbcType=VARCHAR},
      </if>
      <if test="record.olderpoint != null" >
        olderPoint = #{record.olderpoint,jdbcType=INTEGER},
      </if>
      <if test="record.olderbranchid != null" >
        olderBranchId = #{record.olderbranchid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update olderbase
    set olderId = #{record.olderid,jdbcType=INTEGER},
      olderName = #{record.oldername,jdbcType=VARCHAR},
      olderSex = #{record.oldersex,jdbcType=VARCHAR},
      olderBirthday = #{record.olderbirthday,jdbcType=DATE},
      olderPassword = #{record.olderpassword,jdbcType=VARCHAR},
      olderTel = #{record.oldertel,jdbcType=VARCHAR},
      olderAddress = #{record.olderaddress,jdbcType=VARCHAR},
      olderSingleStatus = #{record.oldersinglestatus,jdbcType=VARCHAR},
      olderIDE = #{record.olderide,jdbcType=VARCHAR},
      olderNation = #{record.oldernation,jdbcType=VARCHAR},
      olderHeadUrl = #{record.olderheadurl,jdbcType=VARCHAR},
      olderPoint = #{record.olderpoint,jdbcType=INTEGER},
      olderBranchId = #{record.olderbranchid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Olderbase" >
    update olderbase
    <set >
      <if test="oldername != null" >
        olderName = #{oldername,jdbcType=VARCHAR},
      </if>
      <if test="oldersex != null" >
        olderSex = #{oldersex,jdbcType=VARCHAR},
      </if>
      <if test="olderbirthday != null" >
        olderBirthday = #{olderbirthday,jdbcType=DATE},
      </if>
      <if test="olderpassword != null" >
        olderPassword = #{olderpassword,jdbcType=VARCHAR},
      </if>
      <if test="oldertel != null" >
        olderTel = #{oldertel,jdbcType=VARCHAR},
      </if>
      <if test="olderaddress != null" >
        olderAddress = #{olderaddress,jdbcType=VARCHAR},
      </if>
      <if test="oldersinglestatus != null" >
        olderSingleStatus = #{oldersinglestatus,jdbcType=VARCHAR},
      </if>
      <if test="olderide != null" >
        olderIDE = #{olderide,jdbcType=VARCHAR},
      </if>
      <if test="oldernation != null" >
        olderNation = #{oldernation,jdbcType=VARCHAR},
      </if>
      <if test="olderheadurl != null" >
        olderHeadUrl = #{olderheadurl,jdbcType=VARCHAR},
      </if>
      <if test="olderpoint != null" >
        olderPoint = #{olderpoint,jdbcType=INTEGER},
      </if>
      <if test="olderbranchid != null" >
        olderBranchId = #{olderbranchid,jdbcType=INTEGER},
      </if>
    </set>
    where olderId = #{olderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Olderbase" >
    update olderbase
    set olderName = #{oldername,jdbcType=VARCHAR},
      olderSex = #{oldersex,jdbcType=VARCHAR},
      olderBirthday = #{olderbirthday,jdbcType=DATE},
      olderPassword = #{olderpassword,jdbcType=VARCHAR},
      olderTel = #{oldertel,jdbcType=VARCHAR},
      olderAddress = #{olderaddress,jdbcType=VARCHAR},
      olderSingleStatus = #{oldersinglestatus,jdbcType=VARCHAR},
      olderIDE = #{olderide,jdbcType=VARCHAR},
      olderNation = #{oldernation,jdbcType=VARCHAR},
      olderHeadUrl = #{olderheadurl,jdbcType=VARCHAR},
      olderPoint = #{olderpoint,jdbcType=INTEGER},
      olderBranchId = #{olderbranchid,jdbcType=INTEGER}
    where olderId = #{olderid,jdbcType=INTEGER}
  </update>
  
	<!-- lu 2017-10-12 录入老人基本信息，并传回id -->
	<insert id="insertOlderBase" parameterType="com.sds.em.po.Olderbase">
		<selectKey keyProperty="olderid" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into olderbase (olderName, olderSex,
		olderBirthday,
		olderPassword, olderTel,
		olderAddress, olderSingleStatus, olderIDE,
		olderNation, olderHeadUrl, olderPoint,
		olderBranchId)
		values
		(#{oldername,jdbcType=VARCHAR}, #{oldersex,jdbcType=VARCHAR},
		#{olderbirthday,jdbcType=DATE}, #{olderpassword,jdbcType=VARCHAR},
		#{oldertel,jdbcType=VARCHAR},
		#{olderaddress,jdbcType=VARCHAR},
		#{oldersinglestatus,jdbcType=VARCHAR}, #{olderide,jdbcType=VARCHAR},
		#{oldernation,jdbcType=VARCHAR}, #{olderheadurl,jdbcType=VARCHAR},
		#{olderpoint,jdbcType=INTEGER},
		#{olderbranchid,jdbcType=INTEGER})
	</insert>
</mapper>