<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sds.em.mapper.ProductrateMapper">
	<resultMap id="BaseResultMap" type="com.sds.em.po.Productrate">
		<id column="rateId" property="rateid" jdbcType="INTEGER" />
		<result column="rateOlderId" property="rateolderid" jdbcType="INTEGER" />
		<result column="rateOrderId" property="rateorderid" jdbcType="INTEGER" />
		<result column="rateStar" property="ratestar" jdbcType="INTEGER" />
		<result column="ratecontent" property="ratecontent" jdbcType="VARCHAR" />
		<result column="rateDate" property="ratedate" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		rateId, rateOlderId, rateOrderId, rateStar, ratecontent,
		rateDate
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.sds.em.po.ProductrateExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from productrate
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from productrate
		where rateId = #{rateid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		productrate
		where rateId = #{rateid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.sds.em.po.ProductrateExample">
		delete from productrate
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sds.em.po.Productrate">
		insert into productrate
		(rateId, rateOlderId, rateOrderId,
		rateStar, ratecontent, rateDate
		)
		values (#{rateid,jdbcType=INTEGER}, #{rateolderid,jdbcType=INTEGER},
		#{rateorderid,jdbcType=INTEGER},
		#{ratestar,jdbcType=INTEGER},
		#{ratecontent,jdbcType=VARCHAR}, #{ratedate,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.sds.em.po.Productrate">
		insert into productrate
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="rateid != null">
				rateId,
			</if>
			<if test="rateolderid != null">
				rateOlderId,
			</if>
			<if test="rateorderid != null">
				rateOrderId,
			</if>
			<if test="ratestar != null">
				rateStar,
			</if>
			<if test="ratecontent != null">
				ratecontent,
			</if>
			<if test="ratedate != null">
				rateDate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="rateid != null">
				#{rateid,jdbcType=INTEGER},
			</if>
			<if test="rateolderid != null">
				#{rateolderid,jdbcType=INTEGER},
			</if>
			<if test="rateorderid != null">
				#{rateorderid,jdbcType=INTEGER},
			</if>
			<if test="ratestar != null">
				#{ratestar,jdbcType=INTEGER},
			</if>
			<if test="ratecontent != null">
				#{ratecontent,jdbcType=VARCHAR},
			</if>
			<if test="ratedate != null">
				#{ratedate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sds.em.po.ProductrateExample"
		resultType="java.lang.Integer">
		select count(*) from productrate
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update productrate
		<set>
			<if test="record.rateid != null">
				rateId = #{record.rateid,jdbcType=INTEGER},
			</if>
			<if test="record.rateolderid != null">
				rateOlderId = #{record.rateolderid,jdbcType=INTEGER},
			</if>
			<if test="record.rateorderid != null">
				rateOrderId = #{record.rateorderid,jdbcType=INTEGER},
			</if>
			<if test="record.ratestar != null">
				rateStar = #{record.ratestar,jdbcType=INTEGER},
			</if>
			<if test="record.ratecontent != null">
				ratecontent = #{record.ratecontent,jdbcType=VARCHAR},
			</if>
			<if test="record.ratedate != null">
				rateDate = #{record.ratedate,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update productrate
		set rateId = #{record.rateid,jdbcType=INTEGER},
		rateOlderId = #{record.rateolderid,jdbcType=INTEGER},
		rateOrderId =
		#{record.rateorderid,jdbcType=INTEGER},
		rateStar =
		#{record.ratestar,jdbcType=INTEGER},
		ratecontent =
		#{record.ratecontent,jdbcType=VARCHAR},
		rateDate =
		#{record.ratedate,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Productrate">
		update productrate
		<set>
			<if test="rateolderid != null">
				rateOlderId = #{rateolderid,jdbcType=INTEGER},
			</if>
			<if test="rateorderid != null">
				rateOrderId = #{rateorderid,jdbcType=INTEGER},
			</if>
			<if test="ratestar != null">
				rateStar = #{ratestar,jdbcType=INTEGER},
			</if>
			<if test="ratecontent != null">
				ratecontent = #{ratecontent,jdbcType=VARCHAR},
			</if>
			<if test="ratedate != null">
				rateDate = #{ratedate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where rateId = #{rateid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sds.em.po.Productrate">
		update productrate
		set rateOlderId = #{rateolderid,jdbcType=INTEGER},
		rateOrderId =
		#{rateorderid,jdbcType=INTEGER},
		rateStar =
		#{ratestar,jdbcType=INTEGER},
		ratecontent =
		#{ratecontent,jdbcType=VARCHAR},
		rateDate =
		#{ratedate,jdbcType=TIMESTAMP}
		where rateId =
		#{rateid,jdbcType=INTEGER}
	</update>
	<!-- wuwenbo,查询商品评价 -->
	<select id="getproductrate" parameterType="int"
		resultType="com.sds.em.pojo.ProductrateExtend">
		SELECT * from productrate as pr INNER JOIN orderlist as ol
		on
		pr.rateOrderId=ol.orderListId
		INNER JOIN orders as o on
		o.orderId=ol.orderListFId INNER JOIN product as p
		on
		p.productId=ol.orderProductId
		INNER JOIN olderbase on
		olderbase.olderId=pr.rateOlderId
		where p.productId=#{value}
	</select>

	<!-- wuwenbo,查询订单评价 -->
	<select id="getorderrate" parameterType="int"
		resultType="com.sds.em.pojo.ProductrateExtend">
		SELECT * from productrate as pr INNER JOIN orderlist as ol
		on
		pr.rateOrderId=ol.orderListId
		INNER JOIN orders as o on
		o.orderId=ol.orderListFId INNER JOIN product as p
		on
		p.productId=ol.orderProductId
		INNER JOIN olderbase on
		olderbase.olderId=pr.rateOlderId
		where o.orderId=#{value}
	</select>

	<!-- lu -->

	<select id="getProductRateInfo" parameterType="int"
		resultType="com.sds.em.pojo.ProductrateExtend">
		select productrate.*,olderbase.*,product.*,orderlist.* from
		product
		INNER
		JOIN orderlist ON
		product.productId=orderlist.orderProductId
		INNER JOIN
		productrate ON
		productrate.rateOrderId=orderlist.orderListId
		INNER JOIN
		olderbase ON
		productrate.rateOlderId=olderbase.olderId
		WHERE
		product.productId=#{value}
	</select>
	<!-- 获取近10天商城评价 -->
	<select id="daysrate" parameterType="com.sds.em.po.Productrate"
		resultType="com.sds.em.po.Productrate">
		SELECT productrate.rateDate,COUNT(rateId) ratecontent
		FROM productrate
		INNER JOIN orderlist on orderListId=productrate.rateOrderId INNER JOIN
		product on productId= orderProductId
		WHERE rateStar <![CDATA[>]]>
		#{rateid} and rateStar<![CDATA[<]]>#{rateolderid}
		<if test="ratestar != 0">
			and productId=#{ratestar}
		</if>
		GROUP BY date_format(productrate.rateDate, '%Y-%m-%d')
		ORDER BY
		rateDate DESC
		LIMIT 0,10
	</select>
</mapper>