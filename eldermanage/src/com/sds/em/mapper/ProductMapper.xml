<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sds.em.mapper.ProductMapper">
	<resultMap id="BaseResultMap" type="com.sds.em.po.Product">
		<id column="productId" property="productid" jdbcType="INTEGER" />
		<result column="productName" property="productname" jdbcType="VARCHAR" />
		<result column="productPrice" property="productprice" jdbcType="REAL" />
		<result column="productTypeNumber" property="producttypenumber"
			jdbcType="INTEGER" />
		<result column="productInfo" property="productinfo" jdbcType="VARCHAR" />
		<result column="productImg" property="productimg" jdbcType="VARCHAR" />
		<result column="productWeight" property="productweight"
			jdbcType="REAL" />
		<result column="productUponDate" property="productupondate"
			jdbcType="DATE" />
		<result column="productDiscountPrice" property="productdiscountprice"
			jdbcType="REAL" />
		<result column="typeTwoTypeId" property="typetwotypeid"
			jdbcType="INTEGER" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		productId, productName, productPrice, productTypeNumber,
		productInfo,
		productImg,
		productWeight, productUponDate,
		productDiscountPrice, typeTwoTypeId
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.sds.em.po.ProductExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from product
		where productId = #{productid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		product
		where productId = #{productid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.sds.em.po.ProductExample">
		delete from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.sds.em.po.Product">
		insert into product
		(productId, productName, productPrice,
		productTypeNumber, productInfo,
		productImg,
		productWeight, productUponDate, productDiscountPrice,
		typeTwoTypeId)
		values (#{productid,jdbcType=INTEGER},
		#{productname,jdbcType=VARCHAR},
		#{productprice,jdbcType=REAL},
		#{producttypenumber,jdbcType=INTEGER},
		#{productinfo,jdbcType=VARCHAR}, #{productimg,jdbcType=VARCHAR},
		#{productweight,jdbcType=REAL}, #{productupondate,jdbcType=DATE},
		#{productdiscountprice,jdbcType=REAL},
		#{typetwotypeid,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.sds.em.po.Product">
		insert into product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="productid != null">
				productId,
			</if>
			<if test="productname != null">
				productName,
			</if>
			<if test="productprice != null">
				productPrice,
			</if>
			<if test="producttypenumber != null">
				productTypeNumber,
			</if>
			<if test="productinfo != null">
				productInfo,
			</if>
			<if test="productimg != null">
				productImg,
			</if>
			<if test="productweight != null">
				productWeight,
			</if>
			<if test="productupondate != null">
				productUponDate,
			</if>
			<if test="productdiscountprice != null">
				productDiscountPrice,
			</if>
			<if test="typetwotypeid != null">
				typeTwoTypeId,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="productid != null">
				#{productid,jdbcType=INTEGER},
			</if>
			<if test="productname != null">
				#{productname,jdbcType=VARCHAR},
			</if>
			<if test="productprice != null">
				#{productprice,jdbcType=REAL},
			</if>
			<if test="producttypenumber != null">
				#{producttypenumber,jdbcType=INTEGER},
			</if>
			<if test="productinfo != null">
				#{productinfo,jdbcType=VARCHAR},
			</if>
			<if test="productimg != null">
				#{productimg,jdbcType=VARCHAR},
			</if>
			<if test="productweight != null">
				#{productweight,jdbcType=REAL},
			</if>
			<if test="productupondate != null">
				#{productupondate,jdbcType=DATE},
			</if>
			<if test="productdiscountprice != null">
				#{productdiscountprice,jdbcType=REAL},
			</if>
			<if test="typetwotypeid != null">
				#{typetwotypeid,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.sds.em.po.ProductExample"
		resultType="java.lang.Integer">
		select count(*) from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update product
		<set>
			<if test="record.productid != null">
				productId = #{record.productid,jdbcType=INTEGER},
			</if>
			<if test="record.productname != null">
				productName = #{record.productname,jdbcType=VARCHAR},
			</if>
			<if test="record.productprice != null">
				productPrice = #{record.productprice,jdbcType=REAL},
			</if>
			<if test="record.producttypenumber != null">
				productTypeNumber =
				#{record.producttypenumber,jdbcType=INTEGER},
			</if>
			<if test="record.productinfo != null">
				productInfo = #{record.productinfo,jdbcType=VARCHAR},
			</if>
			<if test="record.productimg != null">
				productImg = #{record.productimg,jdbcType=VARCHAR},
			</if>
			<if test="record.productweight != null">
				productWeight = #{record.productweight,jdbcType=REAL},
			</if>
			<if test="record.productupondate != null">
				productUponDate =
				#{record.productupondate,jdbcType=DATE},
			</if>
			<if test="record.productdiscountprice != null">
				productDiscountPrice =
				#{record.productdiscountprice,jdbcType=REAL},
			</if>
			<if test="record.typetwotypeid != null">
				typeTwoTypeId = #{record.typetwotypeid,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update product
		set productId = #{record.productid,jdbcType=INTEGER},
		productName = #{record.productname,jdbcType=VARCHAR},
		productPrice =
		#{record.productprice,jdbcType=REAL},
		productTypeNumber =
		#{record.producttypenumber,jdbcType=INTEGER},
		productInfo =
		#{record.productinfo,jdbcType=VARCHAR},
		productImg =
		#{record.productimg,jdbcType=VARCHAR},
		productWeight =
		#{record.productweight,jdbcType=REAL},
		productUponDate =
		#{record.productupondate,jdbcType=DATE},
		productDiscountPrice =
		#{record.productdiscountprice,jdbcType=REAL},
		typeTwoTypeId =
		#{record.typetwotypeid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Product">
		update product
		<set>
			<if test="productname != null">
				productName = #{productname,jdbcType=VARCHAR},
			</if>
			<if test="productprice != null">
				productPrice = #{productprice,jdbcType=REAL},
			</if>
			<if test="producttypenumber != null">
				productTypeNumber =
				#{producttypenumber,jdbcType=INTEGER},
			</if>
			<if test="productinfo != null">
				productInfo = #{productinfo,jdbcType=VARCHAR},
			</if>
			<if test="productimg != null">
				productImg = #{productimg,jdbcType=VARCHAR},
			</if>
			<if test="productweight != null">
				productWeight = #{productweight,jdbcType=REAL},
			</if>
			<if test="productupondate != null">
				productUponDate = #{productupondate,jdbcType=DATE},
			</if>
			<if test="productdiscountprice != null">
				productDiscountPrice =
				#{productdiscountprice,jdbcType=REAL},
			</if>
			<if test="typetwotypeid != null">
				typeTwoTypeId = #{typetwotypeid,jdbcType=INTEGER},
			</if>
		</set>
		where productId = #{productid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sds.em.po.Product">
		update product
		set
		productName = #{productname,jdbcType=VARCHAR},
		productPrice =
		#{productprice,jdbcType=REAL},
		productTypeNumber =
		#{producttypenumber,jdbcType=INTEGER},
		productInfo =
		#{productinfo,jdbcType=VARCHAR},
		productImg =
		#{productimg,jdbcType=VARCHAR},
		productWeight =
		#{productweight,jdbcType=REAL},
		productUponDate =
		#{productupondate,jdbcType=DATE},
		productDiscountPrice =
		#{productdiscountprice,jdbcType=REAL},
		typeTwoTypeId =
		#{typetwotypeid,jdbcType=INTEGER}
		where productId =
		#{productid,jdbcType=INTEGER}
	</update>


	<!-- 刘露 -->
	<select id="todayRecommend" resultType="com.sds.em.po.Product">
		select product.* from
		product,productstore where
		product.productId=productstore.storeProductId ORDER BY
		productstore.storeDaySales DESC
	</select>

	<select id="typeRecommend" parameterType="java.lang.String"
		resultType="com.sds.em.po.Product">
		select product.* from product,producttype,productstore
		where
		product.productTypeNumber=producttype.typeId and
		product.productId=productstore.storeProductId and
		producttype.typeContent = #{value} ORDER BY
		productstore.storeDaySales
		DESC
	</select>

	<select id="productSearch" parameterType="java.lang.String"
		resultType="com.sds.em.po.Product">
		select * from product where productInfo like '%${value}%'
		or
		productName like '%${value}%'
	</select>

	<select id="productSearchId" parameterType="java.lang.Integer"
		resultType="com.sds.em.shop.pojo.ProductAmount">
		select * from product,productstore WHERE
		product.productId=productstore.storeProductId and
		product.productId=#{value}
	</select>

	<select id="productSearchSortA" parameterType="java.lang.String"
		resultType="com.sds.em.shop.pojo.ProductAmount">
		SELECT * from product INNER JOIN productstore on
		product.productId=productstore.storeProductId WHERE
		product.productName LIKE '%${value}%' or product.productInfo LIKE
		'%${value}%'
		ORDER BY productstore.storeTotalSales DESC
	</select>

	<select id="productSearchSortP" parameterType="java.lang.String"
		resultType="com.sds.em.shop.pojo.ProductAmount">
		select * from product INNER JOIN productstore on
		product.productId=productstore.storeProductId where
		product.productName LIKE
		'%${value}%' or
		product.productInfo LIKE
		'%${value}%' ORDER BY
		productPrice
	</select>

	<select id="typeTwoRecommend" parameterType="java.lang.String"
		resultType="com.sds.em.po.Product">
		select product.*,productstore.* from
		product,producttypetwo,productstore
		where
		product.typeTwoTypeId=producttypetwo.typeTwoId and
		product.productId=productstore.storeProductId and
		producttypetwo.typeTwoContent =#{value}
	</select>

	<select id="typeTwoRecommendA" parameterType="java.lang.String"
		resultType="com.sds.em.po.Product">
		select product.*,productstore.* from
		product,producttypetwo,productstore
		where
		product.typeTwoTypeId=producttypetwo.typeTwoId and
		product.productId=productstore.storeProductId and
		producttypetwo.typeTwoContent = #{value} ORDER BY
		productstore.storeDaySales
		DESC
	</select>

	<select id="typeTwoRecommendP" parameterType="java.lang.String"
		resultType="com.sds.em.po.Product">
		select product.*,productstore.* from
		product,producttypetwo,productstore
		where
		product.typeTwoTypeId=producttypetwo.typeTwoId and
		product.productId=productstore.storeProductId and
		producttypetwo.typeTwoContent =#{value} ORDER BY
		product.productPrice
	</select>
	<select id="repeatedView" resultType="com.sds.em.po.Product">
		select product.* from
		product,productstore where
		product.productId=productstore.storeProductId ORDER BY
		productstore.storeDayBrowse DESC
	</select>
	<!-- wuwenbo,插入返回主键 -->
	<insert id="keyinsert" parameterType="com.sds.em.po.Product"
		useGeneratedKeys="true" keyProperty="productid">
		insert into product
		(productName,
		productPrice,
		productTypeNumber, productInfo,
		productImg,
		productWeight,
		productUponDate, productDiscountPrice,
		typeTwoTypeId)
		values (
		#{productname,jdbcType=VARCHAR},
		#{productprice,jdbcType=REAL},
		#{producttypenumber,jdbcType=INTEGER},
		#{productinfo,jdbcType=VARCHAR}, #{productimg,jdbcType=VARCHAR},
		#{productweight,jdbcType=REAL}, #{productupondate,jdbcType=DATE},
		#{productdiscountprice,jdbcType=REAL},
		#{typetwotypeid,jdbcType=INTEGER})
	</insert>

	<select id="confirmOrderRightNow" parameterType="com.sds.em.shopfront.pojo.RightNowPayExtend"
		resultType="com.sds.em.shop.pojo.ConfirmOrderViewExtend">
		select
		product.productPrice-product.productDiscountPrice
		AS
		preferentialPrice,
		product.*,olderbase.*
		from product,olderbase
		where
		olderbase.olderId=#{olderid} and product.productId=#{productid}

	</select>
</mapper>