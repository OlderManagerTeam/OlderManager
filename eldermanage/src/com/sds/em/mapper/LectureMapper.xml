<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sds.em.mapper.LectureMapper" >
  <resultMap id="BaseResultMap" type="com.sds.em.po.Lecture" >
    <id column="lectureId" property="lectureid" jdbcType="INTEGER" />
    <result column="lectureName" property="lecturename" jdbcType="VARCHAR" />
    <result column="lectureIntro" property="lectureintro" jdbcType="VARCHAR" />
    <result column="lectureEnroll" property="lectureenroll" jdbcType="INTEGER" />
    <result column="lectureTotal" property="lecturetotal" jdbcType="INTEGER" />
    <result column="lecturePublishDate" property="lecturepublishdate" jdbcType="DATE" />
    <result column="lectureStatus" property="lecturestatus" jdbcType="INTEGER" />
    <result column="lectureAddress" property="lectureaddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    lectureId, lectureName, lectureIntro, lectureEnroll, lectureTotal, lecturePublishDate, 
    lectureStatus, lectureAddress
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sds.em.po.LectureExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lecture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lecture
    where lectureId = #{lectureid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lecture
    where lectureId = #{lectureid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.LectureExample" >
    delete from lecture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Lecture" >
    insert into lecture (lectureId, lectureName, lectureIntro, 
      lectureEnroll, lectureTotal, lecturePublishDate, 
      lectureStatus, lectureAddress)
    values (#{lectureid,jdbcType=INTEGER}, #{lecturename,jdbcType=VARCHAR}, #{lectureintro,jdbcType=VARCHAR}, 
      #{lectureenroll,jdbcType=INTEGER}, #{lecturetotal,jdbcType=INTEGER}, #{lecturepublishdate,jdbcType=DATE}, 
      #{lecturestatus,jdbcType=INTEGER}, #{lectureaddress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Lecture" >
    insert into lecture
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="lectureid != null" >
        lectureId,
      </if>
      <if test="lecturename != null" >
        lectureName,
      </if>
      <if test="lectureintro != null" >
        lectureIntro,
      </if>
      <if test="lectureenroll != null" >
        lectureEnroll,
      </if>
      <if test="lecturetotal != null" >
        lectureTotal,
      </if>
      <if test="lecturepublishdate != null" >
        lecturePublishDate,
      </if>
      <if test="lecturestatus != null" >
        lectureStatus,
      </if>
      <if test="lectureaddress != null" >
        lectureAddress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="lectureid != null" >
        #{lectureid,jdbcType=INTEGER},
      </if>
      <if test="lecturename != null" >
        #{lecturename,jdbcType=VARCHAR},
      </if>
      <if test="lectureintro != null" >
        #{lectureintro,jdbcType=VARCHAR},
      </if>
      <if test="lectureenroll != null" >
        #{lectureenroll,jdbcType=INTEGER},
      </if>
      <if test="lecturetotal != null" >
        #{lecturetotal,jdbcType=INTEGER},
      </if>
      <if test="lecturepublishdate != null" >
        #{lecturepublishdate,jdbcType=DATE},
      </if>
      <if test="lecturestatus != null" >
        #{lecturestatus,jdbcType=INTEGER},
      </if>
      <if test="lectureaddress != null" >
        #{lectureaddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.LectureExample" resultType="java.lang.Integer" >
    select count(*) from lecture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update lecture
    <set >
      <if test="record.lectureid != null" >
        lectureId = #{record.lectureid,jdbcType=INTEGER},
      </if>
      <if test="record.lecturename != null" >
        lectureName = #{record.lecturename,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureintro != null" >
        lectureIntro = #{record.lectureintro,jdbcType=VARCHAR},
      </if>
      <if test="record.lectureenroll != null" >
        lectureEnroll = #{record.lectureenroll,jdbcType=INTEGER},
      </if>
      <if test="record.lecturetotal != null" >
        lectureTotal = #{record.lecturetotal,jdbcType=INTEGER},
      </if>
      <if test="record.lecturepublishdate != null" >
        lecturePublishDate = #{record.lecturepublishdate,jdbcType=DATE},
      </if>
      <if test="record.lecturestatus != null" >
        lectureStatus = #{record.lecturestatus,jdbcType=INTEGER},
      </if>
      <if test="record.lectureaddress != null" >
        lectureAddress = #{record.lectureaddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update lecture
    set lectureId = #{record.lectureid,jdbcType=INTEGER},
      lectureName = #{record.lecturename,jdbcType=VARCHAR},
      lectureIntro = #{record.lectureintro,jdbcType=VARCHAR},
      lectureEnroll = #{record.lectureenroll,jdbcType=INTEGER},
      lectureTotal = #{record.lecturetotal,jdbcType=INTEGER},
      lecturePublishDate = #{record.lecturepublishdate,jdbcType=DATE},
      lectureStatus = #{record.lecturestatus,jdbcType=INTEGER},
      lectureAddress = #{record.lectureaddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Lecture" >
    update lecture
    <set >
      <if test="lecturename != null" >
        lectureName = #{lecturename,jdbcType=VARCHAR},
      </if>
      <if test="lectureintro != null" >
        lectureIntro = #{lectureintro,jdbcType=VARCHAR},
      </if>
      <if test="lectureenroll != null" >
        lectureEnroll = #{lectureenroll,jdbcType=INTEGER},
      </if>
      <if test="lecturetotal != null" >
        lectureTotal = #{lecturetotal,jdbcType=INTEGER},
      </if>
      <if test="lecturepublishdate != null" >
        lecturePublishDate = #{lecturepublishdate,jdbcType=DATE},
      </if>
      <if test="lecturestatus != null" >
        lectureStatus = #{lecturestatus,jdbcType=INTEGER},
      </if>
      <if test="lectureaddress != null" >
        lectureAddress = #{lectureaddress,jdbcType=VARCHAR},
      </if>
    </set>
    where lectureId = #{lectureid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Lecture" >
    update lecture
    set lectureName = #{lecturename,jdbcType=VARCHAR},
      lectureIntro = #{lectureintro,jdbcType=VARCHAR},
      lectureEnroll = #{lectureenroll,jdbcType=INTEGER},
      lectureTotal = #{lecturetotal,jdbcType=INTEGER},
      lecturePublishDate = #{lecturepublishdate,jdbcType=DATE},
      lectureStatus = #{lecturestatus,jdbcType=INTEGER},
      lectureAddress = #{lectureaddress,jdbcType=VARCHAR}
    where lectureId = #{lectureid,jdbcType=INTEGER}
  </update>
</mapper>