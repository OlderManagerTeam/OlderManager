<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sds.em.mapper.ProductrateMapper">
  <resultMap id="BaseResultMap" type="com.sds.em.po.Productrate">
    <id column="rateId" jdbcType="INTEGER" property="rateid" />
    <result column="rateOlderId" jdbcType="INTEGER" property="rateolderid" />
    <result column="rateProductId" jdbcType="INTEGER" property="rateproductid" />
    <result column="rateStar" jdbcType="INTEGER" property="ratestar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rateId, rateOlderId, rateProductId, rateStar
  </sql>
  <select id="selectByExample" parameterType="com.sds.em.po.ProductrateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from productrate
    where rateId = #{rateid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from productrate
    where rateId = #{rateid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.ProductrateExample">
    delete from productrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Productrate">
    insert into productrate (rateId, rateOlderId, rateProductId, 
      rateStar)
    values (#{rateid,jdbcType=INTEGER}, #{rateolderid,jdbcType=INTEGER}, #{rateproductid,jdbcType=INTEGER}, 
      #{ratestar,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Productrate">
    insert into productrate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rateid != null">
        rateId,
      </if>
      <if test="rateolderid != null">
        rateOlderId,
      </if>
      <if test="rateproductid != null">
        rateProductId,
      </if>
      <if test="ratestar != null">
        rateStar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rateid != null">
        #{rateid,jdbcType=INTEGER},
      </if>
      <if test="rateolderid != null">
        #{rateolderid,jdbcType=INTEGER},
      </if>
      <if test="rateproductid != null">
        #{rateproductid,jdbcType=INTEGER},
      </if>
      <if test="ratestar != null">
        #{ratestar,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.ProductrateExample" resultType="java.lang.Integer">
    select count(*) from productrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update productrate
    <set>
      <if test="record.rateid != null">
        rateId = #{record.rateid,jdbcType=INTEGER},
      </if>
      <if test="record.rateolderid != null">
        rateOlderId = #{record.rateolderid,jdbcType=INTEGER},
      </if>
      <if test="record.rateproductid != null">
        rateProductId = #{record.rateproductid,jdbcType=INTEGER},
      </if>
      <if test="record.ratestar != null">
        rateStar = #{record.ratestar,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update productrate
    set rateId = #{record.rateid,jdbcType=INTEGER},
      rateOlderId = #{record.rateolderid,jdbcType=INTEGER},
      rateProductId = #{record.rateproductid,jdbcType=INTEGER},
      rateStar = #{record.ratestar,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Productrate">
    update productrate
    <set>
      <if test="rateolderid != null">
        rateOlderId = #{rateolderid,jdbcType=INTEGER},
      </if>
      <if test="rateproductid != null">
        rateProductId = #{rateproductid,jdbcType=INTEGER},
      </if>
      <if test="ratestar != null">
        rateStar = #{ratestar,jdbcType=INTEGER},
      </if>
    </set>
    where rateId = #{rateid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Productrate">
    update productrate
    set rateOlderId = #{rateolderid,jdbcType=INTEGER},
      rateProductId = #{rateproductid,jdbcType=INTEGER},
      rateStar = #{ratestar,jdbcType=INTEGER}
    where rateId = #{rateid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.sds.em.po.Productrate">
    <id column="rateId" jdbcType="INTEGER" property="rateid" />
    <result column="rateOlderId" jdbcType="INTEGER" property="rateolderid" />
    <result column="rateProductId" jdbcType="INTEGER" property="rateproductid" />
    <result column="rateStar" jdbcType="INTEGER" property="ratestar" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    rateId, rateOlderId, rateProductId, rateStar
  </sql>
  <select id="selectByExample" parameterType="com.sds.em.po.ProductrateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from productrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from productrate
    where rateId = #{rateid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from productrate
    where rateId = #{rateid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.ProductrateExample">
    delete from productrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Productrate">
    insert into productrate (rateId, rateOlderId, rateProductId, 
      rateStar)
    values (#{rateid,jdbcType=INTEGER}, #{rateolderid,jdbcType=INTEGER}, #{rateproductid,jdbcType=INTEGER}, 
      #{ratestar,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Productrate">
    insert into productrate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rateid != null">
        rateId,
      </if>
      <if test="rateolderid != null">
        rateOlderId,
      </if>
      <if test="rateproductid != null">
        rateProductId,
      </if>
      <if test="ratestar != null">
        rateStar,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rateid != null">
        #{rateid,jdbcType=INTEGER},
      </if>
      <if test="rateolderid != null">
        #{rateolderid,jdbcType=INTEGER},
      </if>
      <if test="rateproductid != null">
        #{rateproductid,jdbcType=INTEGER},
      </if>
      <if test="ratestar != null">
        #{ratestar,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.ProductrateExample" resultType="java.lang.Integer">
    select count(*) from productrate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update productrate
    <set>
      <if test="record.rateid != null">
        rateId = #{record.rateid,jdbcType=INTEGER},
      </if>
      <if test="record.rateolderid != null">
        rateOlderId = #{record.rateolderid,jdbcType=INTEGER},
      </if>
      <if test="record.rateproductid != null">
        rateProductId = #{record.rateproductid,jdbcType=INTEGER},
      </if>
      <if test="record.ratestar != null">
        rateStar = #{record.ratestar,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update productrate
    set rateId = #{record.rateid,jdbcType=INTEGER},
      rateOlderId = #{record.rateolderid,jdbcType=INTEGER},
      rateProductId = #{record.rateproductid,jdbcType=INTEGER},
      rateStar = #{record.ratestar,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Productrate">
    update productrate
    <set>
      <if test="rateolderid != null">
        rateOlderId = #{rateolderid,jdbcType=INTEGER},
      </if>
      <if test="rateproductid != null">
        rateProductId = #{rateproductid,jdbcType=INTEGER},
      </if>
      <if test="ratestar != null">
        rateStar = #{ratestar,jdbcType=INTEGER},
      </if>
    </set>
    where rateId = #{rateid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Productrate">
    update productrate
    set rateOlderId = #{rateolderid,jdbcType=INTEGER},
      rateProductId = #{rateproductid,jdbcType=INTEGER},
      rateStar = #{ratestar,jdbcType=INTEGER}
    where rateId = #{rateid,jdbcType=INTEGER}
  </update>
</mapper>