<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sds.em.mapper.SecurityMapper">
  <resultMap id="BaseResultMap" type="com.sds.em.po.Security">
    <id column="securityId" jdbcType="INTEGER" property="securityid" />
    <result column="securityQuestionId" jdbcType="INTEGER" property="securityquestionid" />
    <result column="securityStaffId" jdbcType="INTEGER" property="securitystaffid" />
    <result column="securityAnswer" jdbcType="VARCHAR" property="securityanswer" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    securityId, securityQuestionId, securityStaffId, securityAnswer
  </sql>
  <select id="selectByExample" parameterType="com.sds.em.po.SecurityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from security
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from security
    where securityId = #{securityid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from security
    where securityId = #{securityid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.SecurityExample">
    delete from security
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Security">
    insert into security (securityId, securityQuestionId, securityStaffId, 
      securityAnswer)
    values (#{securityid,jdbcType=INTEGER}, #{securityquestionid,jdbcType=INTEGER}, #{securitystaffid,jdbcType=INTEGER}, 
      #{securityanswer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Security">
    insert into security
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="securityid != null">
        securityId,
      </if>
      <if test="securityquestionid != null">
        securityQuestionId,
      </if>
      <if test="securitystaffid != null">
        securityStaffId,
      </if>
      <if test="securityanswer != null">
        securityAnswer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="securityid != null">
        #{securityid,jdbcType=INTEGER},
      </if>
      <if test="securityquestionid != null">
        #{securityquestionid,jdbcType=INTEGER},
      </if>
      <if test="securitystaffid != null">
        #{securitystaffid,jdbcType=INTEGER},
      </if>
      <if test="securityanswer != null">
        #{securityanswer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.SecurityExample" resultType="java.lang.Integer">
    select count(*) from security
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update security
    <set>
      <if test="record.securityid != null">
        securityId = #{record.securityid,jdbcType=INTEGER},
      </if>
      <if test="record.securityquestionid != null">
        securityQuestionId = #{record.securityquestionid,jdbcType=INTEGER},
      </if>
      <if test="record.securitystaffid != null">
        securityStaffId = #{record.securitystaffid,jdbcType=INTEGER},
      </if>
      <if test="record.securityanswer != null">
        securityAnswer = #{record.securityanswer,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update security
    set securityId = #{record.securityid,jdbcType=INTEGER},
      securityQuestionId = #{record.securityquestionid,jdbcType=INTEGER},
      securityStaffId = #{record.securitystaffid,jdbcType=INTEGER},
      securityAnswer = #{record.securityanswer,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Security">
    update security
    <set>
      <if test="securityquestionid != null">
        securityQuestionId = #{securityquestionid,jdbcType=INTEGER},
      </if>
      <if test="securitystaffid != null">
        securityStaffId = #{securitystaffid,jdbcType=INTEGER},
      </if>
      <if test="securityanswer != null">
        securityAnswer = #{securityanswer,jdbcType=VARCHAR},
      </if>
    </set>
    where securityId = #{securityid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Security">
    update security
    set securityQuestionId = #{securityquestionid,jdbcType=INTEGER},
      securityStaffId = #{securitystaffid,jdbcType=INTEGER},
      securityAnswer = #{securityanswer,jdbcType=VARCHAR}
    where securityId = #{securityid,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.sds.em.po.Security">
    <id column="securityId" jdbcType="INTEGER" property="securityid" />
    <result column="securityQuestionId" jdbcType="INTEGER" property="securityquestionid" />
    <result column="securityStaffId" jdbcType="INTEGER" property="securitystaffid" />
    <result column="securityAnswer" jdbcType="VARCHAR" property="securityanswer" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    securityId, securityQuestionId, securityStaffId, securityAnswer
  </sql>
  <select id="selectByExample" parameterType="com.sds.em.po.SecurityExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from security
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from security
    where securityId = #{securityid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from security
    where securityId = #{securityid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sds.em.po.SecurityExample">
    delete from security
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sds.em.po.Security">
    insert into security (securityId, securityQuestionId, securityStaffId, 
      securityAnswer)
    values (#{securityid,jdbcType=INTEGER}, #{securityquestionid,jdbcType=INTEGER}, #{securitystaffid,jdbcType=INTEGER}, 
      #{securityanswer,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sds.em.po.Security">
    insert into security
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="securityid != null">
        securityId,
      </if>
      <if test="securityquestionid != null">
        securityQuestionId,
      </if>
      <if test="securitystaffid != null">
        securityStaffId,
      </if>
      <if test="securityanswer != null">
        securityAnswer,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="securityid != null">
        #{securityid,jdbcType=INTEGER},
      </if>
      <if test="securityquestionid != null">
        #{securityquestionid,jdbcType=INTEGER},
      </if>
      <if test="securitystaffid != null">
        #{securitystaffid,jdbcType=INTEGER},
      </if>
      <if test="securityanswer != null">
        #{securityanswer,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sds.em.po.SecurityExample" resultType="java.lang.Integer">
    select count(*) from security
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update security
    <set>
      <if test="record.securityid != null">
        securityId = #{record.securityid,jdbcType=INTEGER},
      </if>
      <if test="record.securityquestionid != null">
        securityQuestionId = #{record.securityquestionid,jdbcType=INTEGER},
      </if>
      <if test="record.securitystaffid != null">
        securityStaffId = #{record.securitystaffid,jdbcType=INTEGER},
      </if>
      <if test="record.securityanswer != null">
        securityAnswer = #{record.securityanswer,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update security
    set securityId = #{record.securityid,jdbcType=INTEGER},
      securityQuestionId = #{record.securityquestionid,jdbcType=INTEGER},
      securityStaffId = #{record.securitystaffid,jdbcType=INTEGER},
      securityAnswer = #{record.securityanswer,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sds.em.po.Security">
    update security
    <set>
      <if test="securityquestionid != null">
        securityQuestionId = #{securityquestionid,jdbcType=INTEGER},
      </if>
      <if test="securitystaffid != null">
        securityStaffId = #{securitystaffid,jdbcType=INTEGER},
      </if>
      <if test="securityanswer != null">
        securityAnswer = #{securityanswer,jdbcType=VARCHAR},
      </if>
    </set>
    where securityId = #{securityid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sds.em.po.Security">
    update security
    set securityQuestionId = #{securityquestionid,jdbcType=INTEGER},
      securityStaffId = #{securitystaffid,jdbcType=INTEGER},
      securityAnswer = #{securityanswer,jdbcType=VARCHAR}
    where securityId = #{securityid,jdbcType=INTEGER}
  </update>
</mapper>